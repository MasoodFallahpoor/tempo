apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

def dataDependencies = rootProject.ext.dataDependencies
def dataTestDependencies = rootProject.ext.dataTestDependencies

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation dataDependencies.kotlin
    implementation dataDependencies.retrofit
    implementation dataDependencies.retrofitJsonConverter
    implementation dataDependencies.gson
    implementation dataDependencies.livedata
    implementation dataDependencies.inject
    implementation dataDependencies.paging
    implementation dataDependencies.coroutines
    testImplementation dataTestDependencies.junit
    testImplementation dataTestDependencies.truth
    testImplementation dataTestDependencies.testCore
    testImplementation dataTestDependencies.robolecteric
    testImplementation dataTestDependencies.mockito
    testImplementation dataTestDependencies.archCoreTesting
    testImplementation dataTestDependencies.retrofitMock
}
